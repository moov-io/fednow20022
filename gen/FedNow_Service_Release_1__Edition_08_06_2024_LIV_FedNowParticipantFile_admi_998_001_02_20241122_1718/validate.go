// Code generated by GoComply XSD2Go for Moov; DO NOT EDIT.
// Validations for urn:swift:xsd:admi.998.001.02
package FedNow_Service_Release_1__Edition_08_06_2024_LIV_FedNowParticipantFile_admi_998_001_02_20241122_1718

import (
	"github.com/moov-io/base"
	"github.com/moov-io/fednow20022/pkg/fednow"
)

// XSD Element validations

func (v Document) Validate() error {
	var errs base.ErrorList = base.ErrorList{}
	baseName := "Document"
	fednow.AddError(&errs, baseName+".AdmstnPrtryMsg", v.AdmstnPrtryMsg.Validate())
	if errs.Empty() {
		return nil
	}
	return errs
}

// XSD ComplexType validations

func (v AdministrationProprietaryMessageV02) Validate() error {
	var errs base.ErrorList = base.ErrorList{}
	baseName := "AdministrationProprietaryMessageV02"
	fednow.AddError(&errs, baseName+".PrtryData", v.PrtryData.Validate())
	if errs.Empty() {
		return nil
	}
	return errs
}

func (v ProprietaryData51) Validate() error {
	var errs base.ErrorList = base.ErrorList{}
	baseName := "ProprietaryData51"
	fednow.AddError(&errs, baseName+".Tp", v.Tp.Validate())
	fednow.AddError(&errs, baseName+".Data", v.Data.Validate())
	if errs.Empty() {
		return nil
	}
	return errs
}

func (v Admi998SupplementaryDataEnvelope1) Validate() error {
	var errs base.ErrorList = base.ErrorList{}
	if errs.Empty() {
		return nil
	}
	return errs
}

// XSD SimpleType validations

func (v Max35TextFixed) Validate() error {
	if err := fednow.ValidateEnumeration(string(v), "FPFL"); err != nil {
		return err
	}
	return nil
}
