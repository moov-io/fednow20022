// Code generated by https://github.com/gocomply/xsd2go; DO NOT EDIT.
// Models for urn:iso:std:iso:20022:tech:xsd:head.001.001.02
package head_001_001_02

import (
	"encoding/xml"

	"github.com/moov-io/fednow20022/pkg/fednow"
)

// Element
type AppHdr struct {
	XMLName xml.Name `xml:"AppHdr"`

	CharSet *UnicodeChartsCode `xml:"CharSet"`

	Fr Party44Choice `xml:"Fr"`

	To Party44Choice `xml:"To"`

	BizMsgIdr Max35Text `xml:"BizMsgIdr"`

	MsgDefIdr Max35Text `xml:"MsgDefIdr"`

	BizSvc *Max35Text `xml:"BizSvc"`

	MktPrctc *ImplementationSpecification1 `xml:"MktPrctc"`

	CreDt fednow.ISODateTime `xml:"CreDt"`

	BizPrcgDt *fednow.ISODateTime `xml:"BizPrcgDt"`

	CpyDplct *CopyDuplicate1Code `xml:"CpyDplct"`

	PssblDplct *YesNoIndicator `xml:"PssblDplct"`

	Prty *BusinessMessagePriorityCode `xml:"Prty"`

	Sgntr *SignatureEnvelope `xml:"Sgntr"`

	Rltd []BusinessApplicationHeader5 `xml:"Rltd"`
}

// XSD ComplexType declarations

type AddressType3Choice struct {
	XMLName xml.Name

	Cd *AddressType2Code `xml:"Cd"`

	Prtry *GenericIdentification30 `xml:"Prtry"`

	innerXml string `xml:",innerxml"`
}

type BranchAndFinancialInstitutionIdentification6 struct {
	XMLName xml.Name

	FinInstnId FinancialInstitutionIdentification18 `xml:"FinInstnId"`

	BrnchId *BranchData3 `xml:"BrnchId"`

	innerXml string `xml:",innerxml"`
}

type BranchData3 struct {
	XMLName xml.Name

	Id *Max35Text `xml:"Id"`

	LEI *LEIIdentifier `xml:"LEI"`

	Nm *Max140Text `xml:"Nm"`

	PstlAdr *PostalAddress24 `xml:"PstlAdr"`

	innerXml string `xml:",innerxml"`
}

type BusinessApplicationHeader5 struct {
	XMLName xml.Name

	CharSet *UnicodeChartsCode `xml:"CharSet"`

	Fr Party44Choice `xml:"Fr"`

	To Party44Choice `xml:"To"`

	BizMsgIdr Max35Text `xml:"BizMsgIdr"`

	MsgDefIdr Max35Text `xml:"MsgDefIdr"`

	BizSvc *Max35Text `xml:"BizSvc"`

	CreDt fednow.ISODateTime `xml:"CreDt"`

	CpyDplct *CopyDuplicate1Code `xml:"CpyDplct"`

	PssblDplct *YesNoIndicator `xml:"PssblDplct"`

	Prty *BusinessMessagePriorityCode `xml:"Prty"`

	Sgntr *SignatureEnvelope `xml:"Sgntr"`

	innerXml string `xml:",innerxml"`
}

type BusinessApplicationHeaderV02 struct {
	XMLName xml.Name

	CharSet *UnicodeChartsCode `xml:"CharSet"`

	Fr Party44Choice `xml:"Fr"`

	To Party44Choice `xml:"To"`

	BizMsgIdr Max35Text `xml:"BizMsgIdr"`

	MsgDefIdr Max35Text `xml:"MsgDefIdr"`

	BizSvc *Max35Text `xml:"BizSvc"`

	MktPrctc *ImplementationSpecification1 `xml:"MktPrctc"`

	CreDt fednow.ISODateTime `xml:"CreDt"`

	BizPrcgDt *fednow.ISODateTime `xml:"BizPrcgDt"`

	CpyDplct *CopyDuplicate1Code `xml:"CpyDplct"`

	PssblDplct *YesNoIndicator `xml:"PssblDplct"`

	Prty *BusinessMessagePriorityCode `xml:"Prty"`

	Sgntr *SignatureEnvelope `xml:"Sgntr"`

	Rltd []BusinessApplicationHeader5 `xml:"Rltd"`

	innerXml string `xml:",innerxml"`
}

type ClearingSystemIdentification2Choice struct {
	XMLName xml.Name

	Cd *ExternalClearingSystemIdentification1Code `xml:"Cd"`

	Prtry *Max35Text `xml:"Prtry"`

	innerXml string `xml:",innerxml"`
}

type ClearingSystemMemberIdentification2 struct {
	XMLName xml.Name

	ClrSysId *ClearingSystemIdentification2Choice `xml:"ClrSysId"`

	MmbId Max35Text `xml:"MmbId"`

	innerXml string `xml:",innerxml"`
}

type Contact4 struct {
	XMLName xml.Name

	NmPrfx *NamePrefix2Code `xml:"NmPrfx"`

	Nm *Max140Text `xml:"Nm"`

	PhneNb *PhoneNumber `xml:"PhneNb"`

	MobNb *PhoneNumber `xml:"MobNb"`

	FaxNb *PhoneNumber `xml:"FaxNb"`

	EmailAdr *Max2048Text `xml:"EmailAdr"`

	EmailPurp *Max35Text `xml:"EmailPurp"`

	JobTitl *Max35Text `xml:"JobTitl"`

	Rspnsblty *Max35Text `xml:"Rspnsblty"`

	Dept *Max70Text `xml:"Dept"`

	Othr []OtherContact1 `xml:"Othr"`

	PrefrdMtd *PreferredContactMethod1Code `xml:"PrefrdMtd"`

	innerXml string `xml:",innerxml"`
}

type DateAndPlaceOfBirth1 struct {
	XMLName xml.Name

	BirthDt fednow.ISODate `xml:"BirthDt"`

	PrvcOfBirth *Max35Text `xml:"PrvcOfBirth"`

	CityOfBirth Max35Text `xml:"CityOfBirth"`

	CtryOfBirth CountryCode `xml:"CtryOfBirth"`

	innerXml string `xml:",innerxml"`
}

type FinancialIdentificationSchemeName1Choice struct {
	XMLName xml.Name

	Cd *ExternalFinancialInstitutionIdentification1Code `xml:"Cd"`

	Prtry *Max35Text `xml:"Prtry"`

	innerXml string `xml:",innerxml"`
}

type FinancialInstitutionIdentification18 struct {
	XMLName xml.Name

	BICFI *BICFIDec2014Identifier `xml:"BICFI"`

	ClrSysMmbId *ClearingSystemMemberIdentification2 `xml:"ClrSysMmbId"`

	LEI *LEIIdentifier `xml:"LEI"`

	Nm *Max140Text `xml:"Nm"`

	PstlAdr *PostalAddress24 `xml:"PstlAdr"`

	Othr *GenericFinancialIdentification1 `xml:"Othr"`

	innerXml string `xml:",innerxml"`
}

type GenericFinancialIdentification1 struct {
	XMLName xml.Name

	Id Max35Text `xml:"Id"`

	SchmeNm *FinancialIdentificationSchemeName1Choice `xml:"SchmeNm"`

	Issr *Max35Text `xml:"Issr"`

	innerXml string `xml:",innerxml"`
}

type GenericIdentification30 struct {
	XMLName xml.Name

	Id Exact4AlphaNumericText `xml:"Id"`

	Issr Max35Text `xml:"Issr"`

	SchmeNm *Max35Text `xml:"SchmeNm"`

	innerXml string `xml:",innerxml"`
}

type GenericOrganisationIdentification1 struct {
	XMLName xml.Name

	Id Max35Text `xml:"Id"`

	SchmeNm *OrganisationIdentificationSchemeName1Choice `xml:"SchmeNm"`

	Issr *Max35Text `xml:"Issr"`

	innerXml string `xml:",innerxml"`
}

type GenericPersonIdentification1 struct {
	XMLName xml.Name

	Id Max35Text `xml:"Id"`

	SchmeNm *PersonIdentificationSchemeName1Choice `xml:"SchmeNm"`

	Issr *Max35Text `xml:"Issr"`

	innerXml string `xml:",innerxml"`
}

type ImplementationSpecification1 struct {
	XMLName xml.Name

	Regy Max350Text `xml:"Regy"`

	Id Max2048Text `xml:"Id"`

	innerXml string `xml:",innerxml"`
}

type OrganisationIdentification29 struct {
	XMLName xml.Name

	AnyBIC *AnyBICDec2014Identifier `xml:"AnyBIC"`

	LEI *LEIIdentifier `xml:"LEI"`

	Othr []GenericOrganisationIdentification1 `xml:"Othr"`

	innerXml string `xml:",innerxml"`
}

type OrganisationIdentificationSchemeName1Choice struct {
	XMLName xml.Name

	Cd *ExternalOrganisationIdentification1Code `xml:"Cd"`

	Prtry *Max35Text `xml:"Prtry"`

	innerXml string `xml:",innerxml"`
}

type OtherContact1 struct {
	XMLName xml.Name

	ChanlTp Max4Text `xml:"ChanlTp"`

	Id *Max128Text `xml:"Id"`

	innerXml string `xml:",innerxml"`
}

type Party38Choice struct {
	XMLName xml.Name

	OrgId *OrganisationIdentification29 `xml:"OrgId"`

	PrvtId *PersonIdentification13 `xml:"PrvtId"`

	innerXml string `xml:",innerxml"`
}

type Party44Choice struct {
	XMLName xml.Name

	OrgId *PartyIdentification135 `xml:"OrgId"`

	FIId *BranchAndFinancialInstitutionIdentification6 `xml:"FIId"`

	innerXml string `xml:",innerxml"`
}

type PartyIdentification135 struct {
	XMLName xml.Name

	Nm *Max140Text `xml:"Nm"`

	PstlAdr *PostalAddress24 `xml:"PstlAdr"`

	Id *Party38Choice `xml:"Id"`

	CtryOfRes *CountryCode `xml:"CtryOfRes"`

	CtctDtls *Contact4 `xml:"CtctDtls"`

	innerXml string `xml:",innerxml"`
}

type PersonIdentification13 struct {
	XMLName xml.Name

	DtAndPlcOfBirth *DateAndPlaceOfBirth1 `xml:"DtAndPlcOfBirth"`

	Othr []GenericPersonIdentification1 `xml:"Othr"`

	innerXml string `xml:",innerxml"`
}

type PersonIdentificationSchemeName1Choice struct {
	XMLName xml.Name

	Cd *ExternalPersonIdentification1Code `xml:"Cd"`

	Prtry *Max35Text `xml:"Prtry"`

	innerXml string `xml:",innerxml"`
}

type PostalAddress24 struct {
	XMLName xml.Name

	AdrTp *AddressType3Choice `xml:"AdrTp"`

	Dept *Max70Text `xml:"Dept"`

	SubDept *Max70Text `xml:"SubDept"`

	StrtNm *Max70Text `xml:"StrtNm"`

	BldgNb *Max16Text `xml:"BldgNb"`

	BldgNm *Max35Text `xml:"BldgNm"`

	Flr *Max70Text `xml:"Flr"`

	PstBx *Max16Text `xml:"PstBx"`

	Room *Max70Text `xml:"Room"`

	PstCd *Max16Text `xml:"PstCd"`

	TwnNm *Max35Text `xml:"TwnNm"`

	TwnLctnNm *Max35Text `xml:"TwnLctnNm"`

	DstrctNm *Max35Text `xml:"DstrctNm"`

	CtrySubDvsn *Max35Text `xml:"CtrySubDvsn"`

	Ctry *CountryCode `xml:"Ctry"`

	AdrLine []Max70Text `xml:"AdrLine"`

	innerXml string `xml:",innerxml"`
}

type SignatureEnvelope struct {
	XMLName xml.Name

	innerXml string `xml:",innerxml"`
}

// XSD SimpleType declarations

type AddressType2Code string

const AddressType2CodeAddr AddressType2Code = "ADDR"

const AddressType2CodePbox AddressType2Code = "PBOX"

const AddressType2CodeHome AddressType2Code = "HOME"

const AddressType2CodeBizz AddressType2Code = "BIZZ"

const AddressType2CodeMlto AddressType2Code = "MLTO"

const AddressType2CodeDlvy AddressType2Code = "DLVY"

type AnyBICDec2014Identifier string

type BICFIDec2014Identifier string

type BusinessMessagePriorityCode string

type CopyDuplicate1Code string

const CopyDuplicate1CodeCodu CopyDuplicate1Code = "CODU"

const CopyDuplicate1CodeCopy CopyDuplicate1Code = "COPY"

const CopyDuplicate1CodeDupl CopyDuplicate1Code = "DUPL"

type CountryCode string

type Exact4AlphaNumericText string

type ExternalClearingSystemIdentification1Code string

type ExternalFinancialInstitutionIdentification1Code string

type ExternalOrganisationIdentification1Code string

type ExternalPersonIdentification1Code string

type LEIIdentifier string

type Max128Text string

type Max140Text string

type Max16Text string

type Max2048Text string

type Max350Text string

type Max35Text string

type Max4Text string

type Max70Text string

type NamePrefix2Code string

const NamePrefix2CodeDoct NamePrefix2Code = "DOCT"

const NamePrefix2CodeMadm NamePrefix2Code = "MADM"

const NamePrefix2CodeMiss NamePrefix2Code = "MISS"

const NamePrefix2CodeMist NamePrefix2Code = "MIST"

const NamePrefix2CodeMiks NamePrefix2Code = "MIKS"

type PhoneNumber string

type PreferredContactMethod1Code string

const PreferredContactMethod1CodeLett PreferredContactMethod1Code = "LETT"

const PreferredContactMethod1CodeMail PreferredContactMethod1Code = "MAIL"

const PreferredContactMethod1CodePhon PreferredContactMethod1Code = "PHON"

const PreferredContactMethod1CodeFaxx PreferredContactMethod1Code = "FAXX"

const PreferredContactMethod1CodeCell PreferredContactMethod1Code = "CELL"

type UnicodeChartsCode string

type YesNoIndicator bool
