// Code generated by https://github.com/gocomply/xsd2go; DO NOT EDIT.
// Models for urn:iso:std:iso:20022:tech:xsd:admi.007.001.01
package admi_007_001_01

import (
	"encoding/xml"
	"time"
)

// Element
type Document struct {
	XMLName xml.Name `xml:"Document"`

	RctAck ReceiptAcknowledgementV01 `xml:",any"`
}

// XSD ComplexType declarations

type GenericIdentification36 struct {
	XMLName xml.Name

	Id Max35Text `xml:"Id"`

	Issr Max35Text `xml:"Issr"`

	SchmeNm *Max35Text `xml:"SchmeNm"`

	innerXml string `xml:",innerxml"`
}

type MessageHeader10 struct {
	XMLName xml.Name

	MsgId Max35Text `xml:"MsgId"`

	CreDtTm *ISODateTime `xml:"CreDtTm"`

	QryNm *Max35Text `xml:"QryNm"`

	innerXml string `xml:",innerxml"`
}

type MessageReference1 struct {
	XMLName xml.Name

	Ref Max35Text `xml:"Ref"`

	MsgNm *Max35Text `xml:"MsgNm"`

	RefIssr *PartyIdentification136 `xml:"RefIssr"`

	innerXml string `xml:",innerxml"`
}

type NameAndAddress5 struct {
	XMLName xml.Name

	Nm Max350Text `xml:"Nm"`

	Adr *PostalAddress1 `xml:"Adr"`

	innerXml string `xml:",innerxml"`
}

type PartyIdentification120Choice struct {
	XMLName xml.Name

	AnyBIC *AnyBICDec2014Identifier `xml:"AnyBIC"`

	PrtryId *GenericIdentification36 `xml:"PrtryId"`

	NmAndAdr *NameAndAddress5 `xml:"NmAndAdr"`

	innerXml string `xml:",innerxml"`
}

type PartyIdentification136 struct {
	XMLName xml.Name

	Id PartyIdentification120Choice `xml:"Id"`

	LEI *LEIIdentifier `xml:"LEI"`

	innerXml string `xml:",innerxml"`
}

type PostalAddress1 struct {
	XMLName xml.Name

	AdrTp *AddressType2Code `xml:"AdrTp"`

	AdrLine []Max70Text `xml:"AdrLine"`

	StrtNm *Max70Text `xml:"StrtNm"`

	BldgNb *Max16Text `xml:"BldgNb"`

	PstCd *Max16Text `xml:"PstCd"`

	TwnNm *Max35Text `xml:"TwnNm"`

	CtrySubDvsn *Max35Text `xml:"CtrySubDvsn"`

	Ctry CountryCode `xml:"Ctry"`

	innerXml string `xml:",innerxml"`
}

type ReceiptAcknowledgementReport2 struct {
	XMLName xml.Name

	RltdRef MessageReference1 `xml:"RltdRef"`

	ReqHdlg RequestHandling2 `xml:"ReqHdlg"`

	innerXml string `xml:",innerxml"`
}

type ReceiptAcknowledgementV01 struct {
	XMLName xml.Name

	MsgId MessageHeader10 `xml:"MsgId"`

	Rpt []ReceiptAcknowledgementReport2 `xml:"Rpt"`

	SplmtryData []SupplementaryData1 `xml:"SplmtryData"`

	innerXml string `xml:",innerxml"`
}

type RequestHandling2 struct {
	XMLName xml.Name

	StsCd Max4AlphaNumericText `xml:"StsCd"`

	StsDtTm *ISODateTime `xml:"StsDtTm"`

	Desc *Max140Text `xml:"Desc"`

	innerXml string `xml:",innerxml"`
}

type SupplementaryData1 struct {
	XMLName xml.Name

	PlcAndNm *Max350Text `xml:"PlcAndNm"`

	Envlp SupplementaryDataEnvelope1 `xml:"Envlp"`

	innerXml string `xml:",innerxml"`
}

type SupplementaryDataEnvelope1 struct {
	XMLName xml.Name

	innerXml string `xml:",innerxml"`
}

// XSD SimpleType declarations

type AddressType2Code string

const AddressType2CodeAddr AddressType2Code = "ADDR"

const AddressType2CodePbox AddressType2Code = "PBOX"

const AddressType2CodeHome AddressType2Code = "HOME"

const AddressType2CodeBizz AddressType2Code = "BIZZ"

const AddressType2CodeMlto AddressType2Code = "MLTO"

const AddressType2CodeDlvy AddressType2Code = "DLVY"

type AnyBICDec2014Identifier string

type CountryCode string

type ISODateTime time.Time

type LEIIdentifier string

type Max140Text string

type Max16Text string

type Max350Text string

type Max35Text string

type Max4AlphaNumericText string

type Max70Text string
