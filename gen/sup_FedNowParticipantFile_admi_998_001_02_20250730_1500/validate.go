// Code generated by GoComply XSD2Go for Moov; DO NOT EDIT.
// Validations for urn:fed:xsd:admi.998.001.02
package sup_FedNowParticipantFile_admi_998_001_02_20250730_1500

import (
	"github.com/moov-io/base"
	"github.com/moov-io/fednow20022/pkg/fednow"
)

// XSD Element validations

func (v Document) Validate() error {
	var errs base.ErrorList = base.ErrorList{}
	baseName := "Document"
	fednow.AddError(&errs, baseName+".Admi998SuplDataV01", v.Admi998SuplDataV01.Validate())
	if errs.Empty() {
		return nil
	}
	return errs
}

// XSD ComplexType validations

func (v FedNowParticipantFile1) Validate() error {
	var errs base.ErrorList = base.ErrorList{}
	baseName := "FedNowParticipantFile1"
	fednow.AddError(&errs, baseName+".BizDay", v.BizDay.Validate())
	for indx := range v.PtcptPrfl {
		fednow.AddError(&errs, baseName+".PtcptPrfl", v.PtcptPrfl[indx].Validate())
	}
	if errs.Empty() {
		return nil
	}
	return errs
}

func (v FedNowParticipantProfile1) Validate() error {
	var errs base.ErrorList = base.ErrorList{}
	baseName := "FedNowParticipantProfile1"
	fednow.AddError(&errs, baseName+".Id", v.Id.Validate())
	fednow.AddError(&errs, baseName+".Nm", v.Nm.Validate())
	for indx := range v.Svcs {
		fednow.AddError(&errs, baseName+".Svcs", v.Svcs[indx].Validate())
	}
	if errs.Empty() {
		return nil
	}
	return errs
}

func (v Admi998SuplDataV01) Validate() error {
	var errs base.ErrorList = base.ErrorList{}
	baseName := "Admi998SuplDataV01"
	fednow.AddError(&errs, baseName+".PtcptFile", v.PtcptFile.Validate())
	if errs.Empty() {
		return nil
	}
	return errs
}

// XSD SimpleType validations

func (v Max140Text) Validate() error {
	if err := fednow.ValidateMinLength(string(v), 1); err != nil {
		return err
	}
	if err := fednow.ValidateMaxLength(string(v), 140); err != nil {
		return err
	}
	return nil
}

func (v RoutingNumberFRS1) Validate() error {
	if err := fednow.ValidatePattern(string(v), `[0-9]{9,9}`); err != nil {
		return err
	}
	return nil
}

func (v ServicesFedNow1) Validate() error {
	if err := fednow.ValidateEnumeration(string(v), "CTSR", "CTRO", "RFPR"); err != nil {
		return err
	}
	return nil
}
